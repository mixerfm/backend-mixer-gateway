openapi: 3.0.3

info:
  title: Player API
  description: |
    This API allows client to start or fetch current user play session, as well as interaction with current mix and track,
    such as play, pause, skip, increase volume, like etc.
    
    Note: Main subject in Player API is track in context of specific mix, so all endpoints are actions against that track.
  version: 0.1.0
  x-release-notes:
    - 0.1.0 Exposed endpoints for play, pause, skip, change-volume, like, dislike, recommend, do-not-recommend and report. Also endpoints for fetching track list and play session.

tags:
  - name: Player
    description: Available interactions with specific track.
  - name: Session
    description: Available actions for session fetch and management.

paths:
  /player-session:
    get:
      summary: Fetch currently active player session.
      description: |
        For current user return info about active player session, like: last played or currently playing track and mix.
        This info can be used when user relaunch the client application, so she/he can continue playing last played track/mix.
        Also, this can be used when user is active on multiple platforms to synchronize "now playing" information.
        If user does not have active session, error 404 will be returned.
      operationId: getPlayerSession
      tags:
        - Session
      parameters:
        #headers
        - $ref: './components/headers.yaml#/components/parameters/X-Accept-Version'
      responses:
        '200':
          $ref: '#/components/responses/GetSessionResponse'
        default:
          $ref: './components/errors.yaml#/components/responses/ErrorResponse'

  /player/{mixId}/play:
    post:
      summary: Fetch current track and start playing.
      description: Client can fetch current track from specific mix and start playing it.
      operationId: playTrack
      tags:
        - Player
      parameters:
        #headers
        - $ref: './components/headers.yaml#/components/parameters/X-Accept-Version'
        - $ref: './components/headers.yaml#/components/parameters/X-Idempotency-Key'
        # path parameter
        - $ref: '#/components/parameters/MixIdentifier'
      responses:
        '200':
          $ref: '#/components/responses/GetTrackResponse'
        default:
          $ref: './components/errors.yaml#/components/responses/ErrorResponse'

  /player/{mixId}/pause:
    post:
      summary: Pause currently played track.
      description: Client can pause currently played track. This info is used for better recommendations.
      operationId: pauseTrack
      tags:
        - Player
      parameters:
        #headers
        - $ref: './components/headers.yaml#/components/parameters/X-Accept-Version'
        - $ref: './components/headers.yaml#/components/parameters/X-Idempotency-Key'
        # path parameter
        - $ref: '#/components/parameters/MixIdentifier'
      responses:
        '204':
          description: User successfully paused the track.
        default:
          $ref: './components/errors.yaml#/components/responses/ErrorResponse'

  /player/{mixId}/next:
    post:
      summary: Fetch next track after current one is finished.
      description: |
        After current track is finished (or almost finished) client can fetch next one. If there is no next tracks, error 404 will be thrown.
      operationId: nextTrack
      tags:
        - Player
      parameters:
        #headers
        - $ref: './components/headers.yaml#/components/parameters/X-Accept-Version'
        - $ref: './components/headers.yaml#/components/parameters/X-Idempotency-Key'
        # path parameter
        - $ref: '#/components/parameters/MixIdentifier'
      responses:
        '200':
          $ref: '#/components/responses/GetTrackResponse'
        default:
          $ref: './components/errors.yaml#/components/responses/ErrorResponse'

  /player/{mixId}/skip:
    post:
      summary: Skip current track and fetch next one.
      description: |
        Client can skip current track from specific mix and play next one. If there is no next tracks, error 404 will be thrown.
      operationId: skipTrack
      tags:
        - Player
      parameters:
        #headers
        - $ref: './components/headers.yaml#/components/parameters/X-Accept-Version'
        - $ref: './components/headers.yaml#/components/parameters/X-Idempotency-Key'
        # path parameter
        - $ref: '#/components/parameters/MixIdentifier'
      responses:
        '200':
          $ref: '#/components/responses/GetTrackResponse'
        default:
          $ref: './components/errors.yaml#/components/responses/ErrorResponse'

  /player/{mixId}/change-volume:
    post:
      summary: Change volume of current track.
      description: Client can change volume of currently playing track. This info is used for better recommendations.
      operationId: changeTrackVolume
      tags:
        - Player
      parameters:
        #headers
        - $ref: './components/headers.yaml#/components/parameters/X-Accept-Version'
        - $ref: './components/headers.yaml#/components/parameters/X-Idempotency-Key'
        # path parameter
        - $ref: '#/components/parameters/MixIdentifier'
      requestBody:
        $ref: '#/components/requestBodies/ChangeVolumeRequest'
      responses:
        '204':
          description: User successfully changed the volume of the track.
        default:
          $ref: './components/errors.yaml#/components/responses/ErrorResponse'

  /player/{mixId}/like:
    post:
      summary: Like current track.
      description: Current active user can like currently playing track.
      operationId: likeTrack
      tags:
        - Player
      parameters:
        # headers
        - $ref: './components/headers.yaml#/components/parameters/Authorization'
        - $ref: './components/headers.yaml#/components/parameters/X-Accept-Version'
        - $ref: './components/headers.yaml#/components/parameters/X-Idempotency-Key'
        # path parameter
        - $ref: '#/components/parameters/MixIdentifier'
      responses:
        '204':
          description: User successfully liked the track.
        default:
          $ref: './components/errors.yaml#/components/responses/ErrorResponse'

  /player/{mixId}/dislike:
    post:
      summary: Dislike current track.
      description: Current active user can dislike currently playing track.
      operationId: dislikeTrack
      tags:
        - Player
      parameters:
        # headers
        - $ref: './components/headers.yaml#/components/parameters/Authorization'
        - $ref: './components/headers.yaml#/components/parameters/X-Accept-Version'
        - $ref: './components/headers.yaml#/components/parameters/X-Idempotency-Key'
        # path parameter
        - $ref: '#/components/parameters/MixIdentifier'
      responses:
        '204':
          description: User successfully disliked the track.
        default:
          $ref: './components/errors.yaml#/components/responses/ErrorResponse'

  /player/{mixId}/recommend:
    post:
      summary: Recommend tracks similar to current track.
      description: Recommend tracks similar to currently playing track. This info is used for better recommendations.
      operationId: recommendTrack
      tags:
        - Player
      parameters:
        # headers
        - $ref: './components/headers.yaml#/components/parameters/Authorization'
        - $ref: './components/headers.yaml#/components/parameters/X-Accept-Version'
        - $ref: './components/headers.yaml#/components/parameters/X-Idempotency-Key'
        # path parameter
        - $ref: '#/components/parameters/MixIdentifier'
      responses:
        '204':
          description: User successfully put the track on recommend list.
        default:
          $ref: './components/errors.yaml#/components/responses/ErrorResponse'

  /player/{mixId}/do-not-recommend:
    post:
      summary: Do not recommend current track.
      description: Do not recommend currently playing track again. This info is used for better recommendations.
      operationId: doNotRecommendTrack
      tags:
        - Player
      parameters:
        # headers
        - $ref: './components/headers.yaml#/components/parameters/Authorization'
        - $ref: './components/headers.yaml#/components/parameters/X-Accept-Version'
        - $ref: './components/headers.yaml#/components/parameters/X-Idempotency-Key'
        # path parameter
        - $ref: '#/components/parameters/MixIdentifier'
      responses:
        '204':
          description: User successfully put the track on do-not-recommend list.
        default:
          $ref: './components/errors.yaml#/components/responses/ErrorResponse'

  /player/{mixId}/report:
    post:
      summary: Report current track.
      description: Current active user can report currently playing track.
      operationId: reportTrack
      tags:
        - Player
      parameters:
        # headers
        - $ref: './components/headers.yaml#/components/parameters/Authorization'
        - $ref: './components/headers.yaml#/components/parameters/X-Accept-Version'
        - $ref: './components/headers.yaml#/components/parameters/X-Idempotency-Key'
        # path parameter
        - $ref: '#/components/parameters/MixIdentifier'
      responses:
        '204':
          description: User successfully reported the track.
        default:
          $ref: './components/errors.yaml#/components/responses/ErrorResponse'

  /player/{mixId}/track-list:
    get:
      summary: Get track list for specific mix.
      description: |
        Return only played tracks from specific mix for currently active user.
        If user listened the whole mix or did not listen to any song from the mix, empty collection will be returned.
      operationId: getTrackList
      tags:
        - Player
      parameters:
        # headers
        - $ref: './components/headers.yaml#/components/parameters/X-Accept-Version'
        # path parameter
        - $ref: '#/components/parameters/MixIdentifier'
      responses:
        '200':
          $ref: '#/components/responses/GetTrackListResponse'
        default:
          $ref: './components/errors.yaml#/components/responses/ErrorResponse'

components:
  parameters:
    MixIdentifier:
      name: mixId
      in: path
      description: The unique mix identifier used for fetching specific set of information.
      required: true
      example: 'V1StGXR8z5'
      schema:
        type: string

  requestBodies:
    ChangeVolumeRequest:
      description: Change volume request.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VolumeValue'

  responses:
    GetSessionResponse:
      description: Get active user play session.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Session'

    GetTrackResponse:
      description: Get track.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Track'

    GetTrackListResponse:
      description: Get list of tracks.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TrackList'

  schemas:
    Session:
      type: object
      description: Information about current active user session.
      required:
        - mixId
        - track
      properties:
        mixId:
          type: string
          description: The unique mix identifier used for fetching specific set of information.
          example: 'V1StGXR8z5'
        track:
          $ref: '#/components/schemas/Track'
        device:
          $ref: '#/components/schemas/SessionDevice'

    SessionDevice:
      type: object
      description: Device where session is active.
      required:
        - name
        - type
      properties:
        name:
          type: string
          description: User defined device name.
          example: 'Samsung TV - Living Room'
        type:
          type: string
          description: Device type.
          enum:
            - CONSOLE
            - PHONE
            - TV
            - WATCH
            - WEB

    TrackList:
      type: object
      description: List of listened tracks in current mix. There is no pagination as track list has small amount of items.
      required:
        - tracks
      properties:
        tracks:
          type: array
          items:
            $ref: '#/components/schemas/Track'

    Track:
      type: object
      description: All related information about the track.
      required:
        - name
        - artists
        - album
        - streamUrl
        - duration
      properties:
        name:
          type: string
          description: Human friendly track name.
          example: 'The Great Gig in the Sky'
        artists:
          type: array
          description: List of track artist.
          items:
            $ref: '#/components/schemas/Artist'
        album:
          $ref: '#/components/schemas/Album'
        liked:
          type: boolean
          description: Flag that indicates whether current user likes the track. If there is no active user session, it will be omitted in response.
          example: true
        streamUrl:
          type: string
          description: URL of the track available to play on the client. Note that this URL is dynamic for each request.
          example: 'https://example.com/song.mp3'
        duration:
          type: string
          format: ISO 8601 duration
          description: Duration of the track.
          example: 'PT1H25M14S'

    Artist:
      type: object
      description: Artist information.
      required:
        - username
        - displayName
      properties:
        username:
          type: string
          description: The unique artist identifier used for fetching specific set of information.
          example: 'V1StGXR8z5'
        displayName:
          type: string
          description: Human friendly artist name.
          example: 'Pink Floyd'

    Album:
      type: object
      description: Album information.
      required:
        - identifier
        - displayName
        - releaseDate
      properties:
        identifier:
          type: string
          description: The unique album identifier used for fetching specific set of information.
          example: 'V1StGXR8z5'
        displayName:
          type: string
          description: Human friendly album name.
          example: 'The Dark Side of the Moon'
        releaseDate:
          type: string
          description: Album release date.
          format: date
          example: '1973-03-01'

    VolumeValue:
      type: object
      description: New volume value.
      required:
        - value
      properties:
        value:
          type: integer
          description: Volume value.
          minimum: 0
          maximum: 100
          example: 57