openapi: 3.0.3
info:
  title: Community API
  description: |
    This API allows client to define user interactions such as comment and reply management (creating, editing and deleting).
  version: 0.2.2
  x-release-notes:
    - 0.2.2 Fine-tune comment content definition.
    - 0.2.1 Add reactions list response.
    - 0.2.0 Refactor common data model and added reactions endpoints.
    - 0.1.0 Expose endpoints for fetching, creating, editing, deleting, liking/disliking and reporting comments and replies.

tags:
  - name: Comment
    description: All actions related to user comments.

paths:
  /comments/{mixId}:
    get:
      summary: Retrieve all comments for specific mix.
      description: For given mix retrieve paginated and sorted list of comments.
      operationId: getCommentList
      tags:
        - Comment
      parameters:
        # headers
        - $ref: './components/headers.yaml#/components/parameters/X-Accept-Version'
        # path parameter
        - $ref: './components/parameters.yaml#/components/parameters/MixIdentifier'
        # query parameter
        - $ref: './components/parameters.yaml#/components/parameters/Sort'
        - $ref: './components/parameters.yaml#/components/parameters/Limit'
        - $ref: './components/parameters.yaml#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/GetCommentListResponse'
        default:
          $ref: './components/responses.yaml#/components/responses/ErrorResponse'

    post:
      summary: Add comment on a specific mix.
      description: Current active user can post comment for a specific mix.
      operationId: createComment
      tags:
        - Comment
      parameters:
        # headers
        - $ref: './components/headers.yaml#/components/parameters/Authorization'
        - $ref: './components/headers.yaml#/components/parameters/X-Accept-Version'
        - $ref: './components/headers.yaml#/components/parameters/X-Idempotency-Key'
        # path parameter
        - $ref: './components/parameters.yaml#/components/parameters/MixIdentifier'
      requestBody:
        $ref: '#/components/requestBodies/AddCommentRequest'
      responses:
        '201':
          $ref: '#/components/responses/GetCommentResponse'
        default:
          $ref: './components/responses.yaml#/components/responses/ErrorResponse'

  /comments/{commentId}:
    put:
      summary: Edit specific posted mix.
      description: Author of the comment can edit posted comments.
      operationId: editComment
      tags:
        - Comment
      parameters:
        # headers
        - $ref: './components/headers.yaml#/components/parameters/Authorization'
        - $ref: './components/headers.yaml#/components/parameters/X-Accept-Version'
        - $ref: './components/headers.yaml#/components/parameters/X-Idempotency-Key'
        # path parameter
        - $ref: '#/components/parameters/CommentIdentifier'
      requestBody:
        $ref: '#/components/requestBodies/EditCommentRequest'
      responses:
        '200':
          $ref: '#/components/responses/GetCommentResponse'
        default:
          $ref: './components/responses.yaml#/components/responses/ErrorResponse'

    delete:
      summary: Delete specific comment.
      description: Author of the comment can delete posted comments.
      operationId: deleteComment
      tags:
        - Comment
      parameters:
        # headers
        - $ref: './components/headers.yaml#/components/parameters/Authorization'
        - $ref: './components/headers.yaml#/components/parameters/X-Accept-Version'
        - $ref: './components/headers.yaml#/components/parameters/X-Idempotency-Key'
        # path parameter
        - $ref: '#/components/parameters/CommentIdentifier'
      responses:
        '204':
          description: User successfully deleted the comment.
        default:
          $ref: './components/responses.yaml#/components/responses/ErrorResponse'

  /comments/{commentId}/replies:
    get:
      summary: Retrieve list of comment replies.
      description: Retrieve the list of replies for a specific comment.
      operationId: getReplyList
      tags:
        - Comment
      parameters:
        # headers
        - $ref: './components/headers.yaml#/components/parameters/X-Accept-Version'
        # path parameter
        - $ref: '#/components/parameters/CommentIdentifier'
        # query parameter
        - $ref: './components/parameters.yaml#/components/parameters/Sort'
        - $ref: './components/parameters.yaml#/components/parameters/Limit'
        - $ref: './components/parameters.yaml#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/GetCommentListResponse'
        default:
          $ref: './components/responses.yaml#/components/responses/ErrorResponse'

    post:
      summary: Reply to a specific comment.
      description: Current active user can reply to specific comment.
      operationId: createReply
      tags:
        - Comment
      parameters:
        # headers
        - $ref: './components/headers.yaml#/components/parameters/Authorization'
        - $ref: './components/headers.yaml#/components/parameters/X-Accept-Version'
        - $ref: './components/headers.yaml#/components/parameters/X-Idempotency-Key'
        # path parameter
        - $ref: '#/components/parameters/CommentIdentifier'
      requestBody:
        $ref: '#/components/requestBodies/AddReplyRequest'
      responses:
        '201':
          $ref: '#/components/responses/GetCommentResponse'
        default:
          $ref: './components/responses.yaml#/components/responses/ErrorResponse'

  /comments/{commentId}/reactions:
    post:
      summary: React to specific comment.
      description: Current active user can react to specific comment. Supported actions are - LIKE, DISLIKE and REPORT.
      operationId: react
      tags:
        - Comment
      parameters:
        # headers
        - $ref: './components/headers.yaml#/components/parameters/Authorization'
        - $ref: './components/headers.yaml#/components/parameters/X-Accept-Version'
        - $ref: './components/headers.yaml#/components/parameters/X-Idempotency-Key'
        # path parameter
        - $ref: '#/components/parameters/CommentIdentifier'
      requestBody:
        $ref: './components/parameters.yaml#/components/requestBodies/CreateReactionRequest'
      responses:
        '201':
          $ref: './components/responses.yaml#/components/responses/ReactionsResponse'
        default:
          $ref: './components/responses.yaml#/components/responses/ErrorResponse'

    delete:
      summary: Remove reaction to the specific comment.
      description: Current active user can remove reaction to the specific comment.
      operationId: removeReaction
      tags:
        - Comment
      parameters:
        # headers
        - $ref: './components/headers.yaml#/components/parameters/Authorization'
        - $ref: './components/headers.yaml#/components/parameters/X-Accept-Version'
        - $ref: './components/headers.yaml#/components/parameters/X-Idempotency-Key'
        # path parameter
        - $ref: '#/components/parameters/CommentIdentifier'
      responses:
        '200':
          $ref: './components/responses.yaml#/components/responses/ReactionsResponse'
        default:
          $ref: './components/responses.yaml#/components/responses/ErrorResponse'

components:
  parameters:
    CommentIdentifier:
      name: commentId
      in: path
      required: true
      schema:
        $ref: './components/common.yaml#/components/schemas/Identifier'

  requestBodies:
    AddCommentRequest:
      description: Add comment request.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateOrEditComment'

    AddReplyRequest:
      description: Add comment reply request.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateOrEditComment'

    EditCommentRequest:
      description: Edit comment request.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateOrEditComment'

  responses:
    GetCommentListResponse:
      description: Get list of comments.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CommentList'

    GetCommentResponse:
      description: Get comment response.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Comment'

  schemas:
    CreateOrEditComment:
      type: object
      description: Object holder used for creating or updating the comment.
      required:
        - content
      properties:
        content:
          $ref: '#/components/schemas/CommentContent'

    CommentList:
      type: object
      description: List of comments.
      required:
        - comments
        - metadata
      properties:
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        metadata:
          $ref: './components/responses.yaml#/components/schemas/PaginationMetadata'

    Comment:
      type: object
      description: Information about specific comment.
      required:
        - identifier
        - content
        - author
        - numberOfReplies
        - numberOfLikes
        - numberOfDislikes
        - createdDateTime
        - updatedDateTime
      properties:
        identifier:
          $ref: './components/common.yaml#/components/schemas/Identifier'
        content:
          $ref: '#/components/schemas/CommentContent'
        author:
          $ref: './components/responses.yaml#/components/schemas/Creator'
        numberOfReplies:
          type: integer
          description: Number of replies that this comment has. If none or comment is a reply, than 0 will be returned.
          example: 3
        numberOfLikes:
          type: integer
          description: Number of likes that this comment has. If none, than 0 will be returned.
          example: 5
        numberOfDislikes:
          type: integer
          description: Number of dislikes that this comment has. If none, than 0 will be returned.
          example: 5
        reactions:
          $ref: './components/responses.yaml#/components/schemas/UserReactions'
        createdDateTime:
          type: string
          description: Date and time when comment was created.
          format: date-time
          example: '9999-01-01T12:00:00Z'
        updatedDateTime:
          type: string
          description: Date and time when comment was updated.
          format: date-time
          example: '9999-01-01T12:00:00Z'

    CommentContent:
      type: string
      description: Comment content.
      pattern: '^[^+/<>|\^$€£¥₹]*$'
      minLength: 2
      maxLength: 500
      example: 'My cool comment'
